This is an example of the abstract factory design pattern in C++. It is based on an example found in Head First Design Patterns.

Compiling and Running:
The files provided in the .vscode folder should be sufficient to allow this program to run provided that the compiler path has been set.
Alternatively the makefile can be used to compile each class into an executable.

Here are some notes that I thought were important about its implementation.

The implementation here is similar to the factory design pattern. This makes sense because the abstract factory essentially just adds another factory to the abstract factory so that it can create concrete objects. The only thing I would note here is that you should use unique_ptrs for the concrete objects and use regular pointers for the factory that is inside of the abstract factory. By doing this we make sure that each factory is referenced only once while the concrete objects that we create all have their own objects that belong to them.